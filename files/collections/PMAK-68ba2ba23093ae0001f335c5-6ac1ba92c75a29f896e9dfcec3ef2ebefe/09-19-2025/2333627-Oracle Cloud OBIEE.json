{"collection":{"info":{"_postman_id":"4c4aa237-0052-4d5b-9213-83f1b6a8c8b1","name":"Oracle Cloud OBIEE","description":"# Oracle Business Intelligence Services\nPostman Specs for OBIEE SOAP services.<br/>\nAuthentication is set within the SOAP envelope rather than Basic Auth.\n\n## Reports\nThe reports may need to be uploaded into the OEC enviroment as custom reports are periodically cleansed from the enviroment.\n\nThe test reports can be found at the following link:<br/>\nhttps://drive.google.com/open?id=1XuPXGtCS4x5q8db2dRMHYPRk8O6C-Mem\n\n## Documentation\nOBIEE functional documentation:<br/>\nhttps://drive.google.com/open?id=13hFdGuP02BtyOMRHsvakl-Fy3ifWSlkDbYh9_HWwjG4\n\nOBIEE technical documentation:<br/>\nhttps://drive.google.com/open?id=13hFdGuP02BtyOMRHsvakl-Fy3ifWSlkDbYh9_HWwjG4","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json","updatedAt":"2019-08-21T01:46:12.000Z","createdAt":"2019-08-21T01:08:46.000Z","lastUpdatedBy":"2333627","uid":"2333627-4c4aa237-0052-4d5b-9213-83f1b6a8c8b1"},"item":[{"name":"Standard Report","event":[{"listen":"test","script":{"id":"9c7e017b-85af-494b-9424-3839c631f911","exec":["/* Report specific tests */","pm.test(\"should return PO_HEADERS\", function() {","    var decodedJson = globalFunctions.decodeOBIEEcontent2json(pm);","    pm.expect(decodedJson.PO_HEADERS).to.not.be.null;","});"],"type":"text/javascript"}}],"id":"3cad2506-fdce-44d8-91ce-084b26cea440","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"POST","header":[{"key":"Content-Type","value":"text/xml"},{"key":"SOAPAction","value":""}],"body":{"mode":"raw","raw":"<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pub=\"http://xmlns.oracle.com/oxp/service/PublicReportService\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pub:runReport>\r\n         <pub:reportRequest>\r\n          <pub:reportAbsolutePath>/Custom/More4Apps/TEST_REPORTS/PO_TEST_REPORT_NO_BIND.xdo</pub:reportAbsolutePath>\r\n          <pub:sizeOfDataChunkDownload>-1</pub:sizeOfDataChunkDownload>\r\n          <pub:attributeLocale>en-US</pub:attributeLocale>\r\n          <pub:attributeTemplate>Default</pub:attributeTemplate>\r\n          <pub:attributeFormat>xml</pub:attributeFormat>\r\n\t     <pub:byPassCache>true</pub:byPassCache>\r\n\t     <!-- Ensure the data is normalised with false -->\r\n\t\t<pub:flattenXML>false</pub:flattenXML>\r\n        </pub:reportRequest>\r\n\t    <!-- Username and password -->\r\n        <pub:userID>pbhure</pub:userID>\r\n        <pub:password>Dontforget1</pub:password>\r\n      </pub:runReport>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"},"url":{"raw":"https://eiyw-dev1.fa.us6.oraclecloud.com/xmlpserver/services/PublicReportService","protocol":"https","host":["eiyw-dev1","fa","us6","oraclecloud","com"],"path":["xmlpserver","services","PublicReportService"]},"description":"A standard report with a single data model and no dependencies."},"response":[],"uid":"2333627-3cad2506-fdce-44d8-91ce-084b26cea440"},{"name":"Standard Report JWT","event":[{"listen":"test","script":{"id":"9c7e017b-85af-494b-9424-3839c631f911","exec":["/* Report specific tests */","pm.test(\"should return PO_HEADERS\", function() {","    var decodedJson = globalFunctions.decodeOBIEEcontent2json(pm);","    pm.expect(decodedJson.PO_HEADERS).to.not.be.null;","});"],"type":"text/javascript"}}],"id":"7613a4ae-1dad-4f7d-a603-aedfe45e9221","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"POST","header":[{"key":"Content-Type","value":"text/xml","disabled":true},{"key":"SOAPAction","value":""},{"key":"Authorization","value":"Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsIng1dCI6ImJKMGlTZjdrTm1XMFdiS2pXWWpWakpBaFB3OCIsImtpZCI6InRydXN0c2VydmljZSJ9.eyJleHAiOjE1NjYzNjQ0MDgsInN1YiI6InBiaHVyZSIsImlzcyI6Ind3dy5vcmFjbGUuY29tIiwicHJuIjoicGJodXJlIiwiaWF0IjoxNTY2MzUwMDA4fQ.WqwtbeCve32h9poWMrgUkWSzdw-5Ggzom8hV3OVtkuExt2xCIGKYFh8V18Lb8Ahb-Cb2QirLO6rDBp8lVsVfKm_3xH-ueiZ5TQsnGi933ZPeQb4v5hDaQbFB-9YggdPDdQB03atltC1b287DDZ93mhUzRJ4Y3KcbXgp3eyvtvOHwyDcHoCwi1dNqDnhOVZ5Mf0StWaITPEWDRgOVRuR_O4zQHSlVushOirdLNu_y5NlnAmf2FD1Gx4wZsHOu_kIuXyQ0pzo1yLUpOV-ZVaPIOEOI584SrIZNlqy0LcXTCsuBZ4rvyQibmnAwkU1SMNsM6jJWNEWT2yHeb5QN7eKLtQ","type":"text"}],"body":{"mode":"raw","raw":"<soapenv:Envelope xmlns:soap=\"http://www.w3.org/2003/05/soap-envelope\" xmlns:pub=\"http://xmlns.oracle.com/oxp/service/PublicReportService\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pub:runReport>\r\n         <pub:reportRequest>\r\n          <pub:reportAbsolutePath>/Custom/More4Apps/TEST_REPORTS/PO_TEST_REPORT_NO_BIND.xdo</pub:reportAbsolutePath>\r\n          <pub:sizeOfDataChunkDownload>-1</pub:sizeOfDataChunkDownload>\r\n          <pub:attributeLocale>en-US</pub:attributeLocale>\r\n          <pub:attributeTemplate>Default</pub:attributeTemplate>\r\n          <pub:attributeFormat>xml</pub:attributeFormat>\r\n\t     <pub:byPassCache>true</pub:byPassCache>\r\n\t     <!-- Ensure the data is normalised with false -->\r\n\t\t<pub:flattenXML>false</pub:flattenXML>\r\n        </pub:reportRequest>\r\n\t    <!-- Username and password -->\r\n        <!--pub:userID>pbhure</pub:userID>\r\n        <pub:password>Dontforget1</pub:password-->\r\n      </pub:runReport>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"},"url":{"raw":"https://eiyw-dev1.fa.us6.oraclecloud.com/xmlpserver/services/ExternalReportWSSService","protocol":"https","host":["eiyw-dev1","fa","us6","oraclecloud","com"],"path":["xmlpserver","services","ExternalReportWSSService"]},"description":"A standard report with a single data model and no dependencies."},"response":[],"uid":"2333627-7613a4ae-1dad-4f7d-a603-aedfe45e9221"},{"name":"DFF Segment Report","event":[{"listen":"test","script":{"id":"9c7e017b-85af-494b-9424-3839c631f911","exec":["/* Report specific tests */","pm.test(\"should return PO_HEADERS\", function() {","    var decodedJson = globalFunctions.decodeOBIEEcontent2json(pm);","    pm.expect(decodedJson.PO_HEADERS).to.not.be.null;","});"],"type":"text/javascript"}}],"id":"669c552e-1756-4f76-9308-ef0298ab40d4","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"POST","header":[{"key":"Content-Type","value":"text/xml"},{"key":"SOAPAction","value":""}],"body":{"mode":"raw","raw":"<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pub=\"http://xmlns.oracle.com/oxp/service/PublicReportService\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pub:runReport>\r\n         <pub:reportRequest>\r\n          <pub:reportAbsolutePath>{{ReportDirectory}}/Common/DFF_API_SEGMENTS_REPORT.xdo</pub:reportAbsolutePath>\r\n          <pub:sizeOfDataChunkDownload>-1</pub:sizeOfDataChunkDownload>\r\n          <pub:attributeLocale>en-US</pub:attributeLocale>\r\n          <pub:attributeTemplate>Default</pub:attributeTemplate>\r\n          <pub:attributeFormat>xml</pub:attributeFormat>\r\n\t     <pub:byPassCache>true</pub:byPassCache>\r\n\t     <!-- Ensure the data is normalised with false -->\r\n\t\t<pub:flattenXML>false</pub:flattenXML>\r\n\t\t          <pub:parameterNameValues>\r\n             <!-- PO_NUM Parameter -->\r\n             <pub:item>\r\n                <pub:name>FLEX_NAME</pub:name>\r\n                <pub:multiValuesAllowed>false</pub:multiValuesAllowed>\r\n                <pub:values>\r\n                  <!-- Comma separated values -->\r\n                  <pub:item>PO_HEADERS</pub:item>\r\n             \t </pub:values>\r\n             </pub:item>\r\n             <!-- End PO_NUM Parameter -->\r\n            </pub:parameterNameValues>\r\n        </pub:reportRequest>\r\n\t    <!-- Username and password -->\r\n        <pub:userID>{{Username}}</pub:userID>\r\n        <pub:password>{{Password}}</pub:password>\r\n      </pub:runReport>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"},"url":{"raw":"{{ServerName}}/xmlpserver/services/PublicReportService","host":["{{ServerName}}"],"path":["xmlpserver","services","PublicReportService"]},"description":"A standard report with a single data model and no dependencies."},"response":[],"uid":"2333627-669c552e-1756-4f76-9308-ef0298ab40d4"},{"name":"Filtered Report","event":[{"listen":"test","script":{"id":"9d4b4441-ff87-4644-a90a-7b9978f863a8","exec":["/* Report specific tests */","pm.test(\"should return PO_HEADERS\", function() {","    var decodedJson = globalFunctions.decodeOBIEEcontent2json(pm);","    pm.expect(decodedJson.DATA_DS.PO_HEADERS).to.not.be.null;","});"],"type":"text/javascript"}}],"id":"a19036b2-20a0-4071-b046-ec2aabb15e99","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"POST","header":[{"key":"Content-Type","value":"text/xml"},{"key":"SOAPAction","value":""}],"body":{"mode":"raw","raw":"<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pub=\"http://xmlns.oracle.com/oxp/service/PublicReportService\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pub:runReport>\r\n         <pub:reportRequest>\r\n          <pub:reportAbsolutePath>{{ReportDirectory}}/TEST_REPORTS/PO_TEST_REPORT_BIND.xdo</pub:reportAbsolutePath>\r\n          <pub:sizeOfDataChunkDownload>-1</pub:sizeOfDataChunkDownload>\r\n          <pub:attributeLocale>en-US</pub:attributeLocale>\r\n          <pub:attributeTemplate>Default</pub:attributeTemplate>\r\n          <pub:attributeFormat>xml</pub:attributeFormat>\r\n\t     <pub:byPassCache>true</pub:byPassCache>\r\n\t     <!-- Ensure the data is normalised with false -->\r\n\t\t<pub:flattenXML>false</pub:flattenXML>\r\n          <!-- Parameter Binds -->\r\n          <pub:parameterNameValues>\r\n             <!-- PO_NUM Parameter -->\r\n             <pub:item>\r\n                <pub:name>PO_NUM</pub:name>\r\n                <pub:multiValuesAllowed>true</pub:multiValuesAllowed>\r\n                <pub:values>\r\n                  <!-- Comma separated values -->\r\n                  <pub:item>1</pub:item>\r\n                  <pub:item>2</pub:item>\r\n             \t </pub:values>\r\n             </pub:item>\r\n             <!-- End PO_NUM Parameter -->\r\n            </pub:parameterNameValues>\r\n        </pub:reportRequest>\r\n\t    <!-- Username and password -->\r\n        <pub:userID>{{Username}}</pub:userID>\r\n        <pub:password>{{Password}}</pub:password>\r\n      </pub:runReport>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"},"url":{"raw":"{{ServerName}}/xmlpserver/services/PublicReportService","host":["{{ServerName}}"],"path":["xmlpserver","services","PublicReportService"]},"description":"A report with a bind filter parameter for filtering LOV values by non-date dependencies."},"response":[],"uid":"2333627-a19036b2-20a0-4071-b046-ec2aabb15e99"},{"name":"KFF Report (GL Account)","event":[{"listen":"test","script":{"id":"9d4b4441-ff87-4644-a90a-7b9978f863a8","exec":["/* Report specific tests */","pm.test(\"should return GL Account\", function() {","    var decodedJson = globalFunctions.decodeOBIEEcontent2json(pm);","    pm.expect(decodedJson.DATA_DS.ACCT).to.not.be.null;","});"],"type":"text/javascript"}}],"id":"17ed3b03-d26c-496e-a340-b1e1860a69fa","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"POST","header":[{"key":"Content-Type","value":"text/xml"},{"key":"SOAPAction","value":""}],"body":{"mode":"raw","raw":"<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pub=\"http://xmlns.oracle.com/oxp/service/PublicReportService\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pub:runReport>\r\n         <pub:reportRequest>\r\n          <pub:reportAbsolutePath>{{ReportDirectory}}/TEST_REPORTS/GL_ACCOUNT_REPORT.xdo</pub:reportAbsolutePath>\r\n          <pub:sizeOfDataChunkDownload>-1</pub:sizeOfDataChunkDownload>\r\n          <pub:attributeLocale>en-US</pub:attributeLocale>\r\n          <pub:attributeTemplate>Default</pub:attributeTemplate>\r\n          <pub:attributeFormat>xml</pub:attributeFormat>\r\n\t     <pub:byPassCache>true</pub:byPassCache>\r\n\t     <!-- Ensure the data is normalised with false -->\r\n\t\t<pub:flattenXML>false</pub:flattenXML>\r\n          <!-- Parameter Binds -->\r\n          <pub:parameterNameValues>\r\n             <!-- Parameter -->\r\n             <pub:item>\r\n                <pub:name>GL_FILTER</pub:name>\r\n                <pub:multiValuesAllowed>true</pub:multiValuesAllowed>\r\n                <pub:values>\r\n                  <!-- Comma separated values -->\r\n                  <pub:item>1406.000.00000000.320101.0000.0000.00000000</pub:item>\r\n                   <pub:item>1408.000.00000000.320101.0000.0000.00000000</pub:item>\r\n             \t </pub:values>\r\n             </pub:item>\r\n             <pub:item>\r\n                <pub:name>STRUCTURE_NUM</pub:name>\r\n                <pub:multiValuesAllowed>false</pub:multiValuesAllowed>\r\n                <pub:values>\r\n                  <!-- Comma separated values -->\r\n                  <pub:item>2001</pub:item>\r\n             \t </pub:values>\r\n             </pub:item>\r\n             <!-- End Parameter -->\r\n            </pub:parameterNameValues>\r\n        </pub:reportRequest>\r\n\t    <!-- Username and password -->\r\n        <pub:userID>{{Username}}</pub:userID>\r\n        <pub:password>{{Password}}</pub:password>\r\n      </pub:runReport>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"},"url":{"raw":"{{ServerName}}/xmlpserver/services/PublicReportService","host":["{{ServerName}}"],"path":["xmlpserver","services","PublicReportService"]},"description":"A report with a bind filter parameter for filtering KFF values by concatenated segments."},"response":[],"uid":"2333627-17ed3b03-d26c-496e-a340-b1e1860a69fa"},{"name":"Multilevel Report","event":[{"listen":"test","script":{"id":"4f744ef0-572d-42cf-804c-a50f214302c7","exec":["/* Report specific tests */","pm.test(\"should return a nested XML structure\", function() {","    var decodedJson = globalFunctions.decodeOBIEEcontent2json(pm);","    // Now determine that we have a PO header, line and shipment returned","    pm.expect(decodedJson.DATA_DS.PO_HEADER[0].PO_LINE.PO_SHIP).to.not.be.null;","});"],"type":"text/javascript"}}],"id":"2aebf011-8a4a-45e3-97d5-f8c4d6153722","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"POST","header":[{"key":"Content-Type","value":"text/xml"},{"key":"SOAPAction","value":""}],"body":{"mode":"raw","raw":"<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pub=\"http://xmlns.oracle.com/oxp/service/PublicReportService\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pub:runReport>\r\n         <pub:reportRequest>\r\n          <pub:reportAbsolutePath>{{ReportDirectory}}/TEST_REPORTS/PO_TEST_REPORT_MULTI_LEVEL.xdo</pub:reportAbsolutePath>\r\n          <pub:sizeOfDataChunkDownload>-1</pub:sizeOfDataChunkDownload>\r\n          <pub:attributeLocale>en-US</pub:attributeLocale>\r\n          <pub:attributeTemplate>Default</pub:attributeTemplate>\r\n          <pub:attributeFormat>xml</pub:attributeFormat>\r\n\t     <pub:byPassCache>true</pub:byPassCache>\r\n\t     <!-- Ensure the data is normalised with false -->\r\n\t\t<pub:flattenXML>false</pub:flattenXML>\r\n          <!-- Parameter Binds -->\r\n          <pub:parameterNameValues>\r\n             <!-- PO_NUM Parameter -->\r\n             <pub:item>\r\n                <pub:name>PO_NUM</pub:name>\r\n                <pub:multiValuesAllowed>true</pub:multiValuesAllowed>\r\n                <pub:values>\r\n                  <!-- Comma separated values -->\r\n                  <pub:item>1</pub:item>\r\n                  <pub:item>2</pub:item>\r\n             \t </pub:values>\r\n             </pub:item>\r\n             <!-- End PO_NUM Parameter -->\r\n            </pub:parameterNameValues>\r\n        </pub:reportRequest>\r\n\t    <!-- Username and password -->\r\n        <pub:userID>{{Username}}</pub:userID>\r\n        <pub:password>{{Password}}</pub:password>\r\n      </pub:runReport>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"},"url":{"raw":"{{ServerName}}/xmlpserver/services/PublicReportService","host":["{{ServerName}}"],"path":["xmlpserver","services","PublicReportService"]},"description":"A report with multiple queries for returning download data."},"response":[],"uid":"2333627-2aebf011-8a4a-45e3-97d5-f8c4d6153722"},{"name":"Date Report","event":[{"listen":"test","script":{"id":"2e58871d-ad02-4d3a-8247-27fec7f9e095","exec":["/* Report specific tests */","pm.test(\"should return PO_HEADERS\", function() {","    var decodedJson = globalFunctions.decodeOBIEEcontent2json(pm);","    pm.expect(decodedJson.DATA_DS.PO_HEADERS).to.not.be.null;","});"],"type":"text/javascript"}}],"id":"d6d5976f-b0fe-405c-ba71-568774ece62f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"POST","header":[{"key":"Content-Type","value":"text/xml"},{"key":"SOAPAction","value":""}],"body":{"mode":"raw","raw":"<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pub=\"http://xmlns.oracle.com/oxp/service/PublicReportService\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pub:runReport>\r\n         <pub:reportRequest>\r\n          <pub:reportAbsolutePath>{{ReportDirectory}}/TEST_REPORTS/PO_TEST_DATE_REPORT.xdo</pub:reportAbsolutePath>\r\n          <pub:sizeOfDataChunkDownload>-1</pub:sizeOfDataChunkDownload>\r\n          <pub:attributeLocale>en-US</pub:attributeLocale>\r\n          <pub:attributeTemplate>Default</pub:attributeTemplate>\r\n          <pub:attributeFormat>xml</pub:attributeFormat>\r\n\t     <pub:byPassCache>true</pub:byPassCache>\r\n\t     <!-- Ensure the data is normalised with false -->\r\n\t\t<pub:flattenXML>false</pub:flattenXML>\r\n          <!-- Parameter Binds -->\r\n          <pub:parameterNameValues>\r\n             <!-- Date Parameter -->\r\n             <pub:item>\r\n                <pub:name>DATE_TRUNC</pub:name>\r\n                <pub:dateFormatString>yyyyMMdd</pub:dateFormatString>\r\n                <pub:values>\r\n                  <pub:item>20141111</pub:item>\r\n             \t </pub:values>\r\n             </pub:item>\r\n            </pub:parameterNameValues>\r\n        </pub:reportRequest>\r\n\t    <!-- Username and password -->\r\n        <pub:userID>{{Username}}</pub:userID>\r\n        <pub:password>{{Password}}</pub:password>\r\n      </pub:runReport>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"},"url":{"raw":"{{ServerName}}/xmlpserver/services/PublicReportService","host":["{{ServerName}}"],"path":["xmlpserver","services","PublicReportService"]},"description":"A standard report with a date parameter for filtering LOV values using a date.\n\n<b>Note: this can only be used to filter by a single date parameter. Refer to the 'Multiple Date' reports for filtering using multiple date parameters.</b>"},"response":[],"uid":"2333627-d6d5976f-b0fe-405c-ba71-568774ece62f"},{"name":"Date Time Report","event":[{"listen":"test","script":{"id":"298cb818-c097-46b9-b9cf-14440eec5f1d","exec":["/* Report specific tests */","pm.test(\"should return PO_HEADERS\", function() {","    var decodedJson = globalFunctions.decodeOBIEEcontent2json(pm);","    pm.expect(decodedJson.DATA_DS.PO_HEADERS).to.not.be.null;","});"],"type":"text/javascript"}}],"id":"e3ab9836-aab0-4ca4-93fb-bd7fba08e6b2","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"POST","header":[{"key":"Content-Type","value":"text/xml"},{"key":"SOAPAction","value":""}],"body":{"mode":"raw","raw":"<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pub=\"http://xmlns.oracle.com/oxp/service/PublicReportService\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pub:runReport>\r\n         <pub:reportRequest>\r\n          <pub:reportAbsolutePath>{{ReportDirectory}}/TEST_REPORTS/PO_TEST_DATE_REPORT.xdo</pub:reportAbsolutePath>\r\n          <pub:sizeOfDataChunkDownload>-1</pub:sizeOfDataChunkDownload>\r\n          <pub:attributeLocale>en-US</pub:attributeLocale>\r\n          <pub:attributeTemplate>Default</pub:attributeTemplate>\r\n          <pub:attributeFormat>xml</pub:attributeFormat>\r\n\t     <pub:byPassCache>true</pub:byPassCache>\r\n\t     <!-- Ensure the data is normalised with false -->\r\n\t\t<pub:flattenXML>false</pub:flattenXML>\r\n          <!-- Parameter Binds -->\r\n          <pub:parameterNameValues>\r\n             <!-- Date Parameter -->\r\n             <pub:item>\r\n                <pub:name>DATE_SINGLE</pub:name>\r\n                <pub:dateFormatString>yyyyMMddHHmmss</pub:dateFormatString>\r\n                <pub:values>\r\n                  <pub:item>20141209082027</pub:item>\r\n             \t </pub:values>\r\n             </pub:item>\r\n            </pub:parameterNameValues>\r\n        </pub:reportRequest>\r\n\t    <!-- Username and password -->\r\n        <pub:userID>{{Username}}</pub:userID>\r\n        <pub:password>{{Password}}</pub:password>\r\n      </pub:runReport>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"},"url":{"raw":"{{ServerName}}/xmlpserver/services/PublicReportService","host":["{{ServerName}}"],"path":["xmlpserver","services","PublicReportService"]},"description":"A standard report with a date-time parameter for filtering LOV values using date-time filters.\n\n<b>Note: this can only be used to filter by a single date parameter. Refer to the 'Multiple Date' reports for filtering using multiple date parameters.</b>"},"response":[],"uid":"2333627-e3ab9836-aab0-4ca4-93fb-bd7fba08e6b2"},{"name":"Multiple Date Filter Report","event":[{"listen":"test","script":{"id":"6557261a-4c26-43de-9334-fcf62879ff01","exec":["/* Report specific tests */","pm.test(\"should return PO_HEADERS\", function() {","    var decodedJson = globalFunctions.decodeOBIEEcontent2json(pm);","    pm.expect(decodedJson.DATA_DS.PO_HEADERS).to.not.be.null;","});"],"type":"text/javascript"}}],"id":"ca268162-9b8d-4b3c-9f11-c92698a9ab9a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"POST","header":[{"key":"Content-Type","value":"text/xml"},{"key":"SOAPAction","value":""}],"body":{"mode":"raw","raw":"<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pub=\"http://xmlns.oracle.com/oxp/service/PublicReportService\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pub:runReport>\r\n         <pub:reportRequest>\r\n          <pub:reportAbsolutePath>{{ReportDirectory}}/TEST_REPORTS/PO_TEST_DATE_REPORT.xdo</pub:reportAbsolutePath>\r\n          <pub:sizeOfDataChunkDownload>-1</pub:sizeOfDataChunkDownload>\r\n          <pub:attributeLocale>en-US</pub:attributeLocale>\r\n          <pub:attributeTemplate>Default</pub:attributeTemplate>\r\n          <pub:attributeFormat>xml</pub:attributeFormat>\r\n\t     <pub:byPassCache>true</pub:byPassCache>\r\n\t     <!-- Ensure the data is normalised with false -->\r\n\t\t<pub:flattenXML>false</pub:flattenXML>\r\n          <!-- Parameter Binds -->\r\n          <pub:parameterNameValues>\r\n             <!-- Date Multirow Parameter -->\r\n             <pub:item>\r\n                <pub:name>DATE_TRUNC_MULTI</pub:name>\r\n                <pub:multiValuesAllowed>true</pub:multiValuesAllowed>\r\n                <pub:values>\r\n                  <pub:item>20141209</pub:item>\r\n                  <pub:item>20141111</pub:item>\r\n             \t </pub:values>\r\n             </pub:item>\r\n            </pub:parameterNameValues>\r\n        </pub:reportRequest>\r\n\t    <!-- Username and password -->\r\n        <pub:userID>{{Username}}</pub:userID>\r\n        <pub:password>{{Password}}</pub:password>\r\n      </pub:runReport>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"},"url":{"raw":"{{ServerName}}/xmlpserver/services/PublicReportService","host":["{{ServerName}}"],"path":["xmlpserver","services","PublicReportService"]},"description":"A standard report with a date parameter to filter by multiple date values.\n\n<b>Note: This is the preferred option for filtering date values as multiple date parameters can be used. Note that indexing may be lost in these scenarios.</b>"},"response":[],"uid":"2333627-ca268162-9b8d-4b3c-9f11-c92698a9ab9a"},{"name":"Multiple Date Time Filter Report","event":[{"listen":"test","script":{"id":"20af73e7-57a6-42fa-b0a6-a89236e52acd","exec":["/* Report specific tests */","pm.test(\"should return PO_HEADERS\", function() {","    var decodedJson = globalFunctions.decodeOBIEEcontent2json(pm);","    pm.expect(decodedJson.DATA_DS.PO_HEADERS).to.not.be.null;","});"],"type":"text/javascript"}}],"id":"e116d16f-0651-4bc1-b9c1-9c2c737626b3","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"POST","header":[{"key":"Content-Type","value":"text/xml"},{"key":"SOAPAction","value":""}],"body":{"mode":"raw","raw":"<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pub=\"http://xmlns.oracle.com/oxp/service/PublicReportService\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pub:runReport>\r\n         <pub:reportRequest>\r\n          <pub:reportAbsolutePath>{{ReportDirectory}}/TEST_REPORTS/PO_TEST_DATE_REPORT.xdo</pub:reportAbsolutePath>\r\n          <pub:sizeOfDataChunkDownload>-1</pub:sizeOfDataChunkDownload>\r\n          <pub:attributeLocale>en-US</pub:attributeLocale>\r\n          <pub:attributeTemplate>Default</pub:attributeTemplate>\r\n          <pub:attributeFormat>xml</pub:attributeFormat>\r\n\t     <pub:byPassCache>true</pub:byPassCache>\r\n\t     <!-- Ensure the data is normalised with false -->\r\n\t\t<pub:flattenXML>false</pub:flattenXML>\r\n          <!-- Parameter Binds -->\r\n          <pub:parameterNameValues>\r\n             <!-- Date Multirow Parameter -->\r\n             <pub:item>\r\n                <pub:name>DATE_MULTI</pub:name>\r\n                <pub:multiValuesAllowed>true</pub:multiValuesAllowed>\r\n                <pub:values>\r\n                  <pub:item>20141209082027</pub:item>\r\n                  <pub:item>20141111065139</pub:item>\r\n             \t </pub:values>\r\n             </pub:item>\r\n            </pub:parameterNameValues>\r\n        </pub:reportRequest>\r\n\t    <!-- Username and password -->\r\n        <pub:userID>{{Username}}</pub:userID>\r\n        <pub:password>{{Password}}</pub:password>\r\n      </pub:runReport>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"},"url":{"raw":"{{ServerName}}/xmlpserver/services/PublicReportService","host":["{{ServerName}}"],"path":["xmlpserver","services","PublicReportService"]},"description":"A standard report with a date-time parameter to filter by multiple date-time values.\n\n<b>Note: This is the preferred option for filtering date values as multiple date parameters can be used. Note that indexing may be lost in these scenarios.</b>"},"response":[],"uid":"2333627-e116d16f-0651-4bc1-b9c1-9c2c737626b3"},{"name":"Search Report","event":[{"listen":"test","script":{"id":"74261cbc-7d3e-40d5-a167-e23a261a4a4a","exec":["/* Report specific tests */","pm.test(\"should return PO_HEADERS\", function() {","    var decodedJson = globalFunctions.decodeOBIEEcontent2json(pm);","    pm.expect(decodedJson.DATA_DS.PO_HEADERS).to.not.be.null;","});"],"type":"text/javascript"}}],"id":"1bc22768-b1d6-4fd2-abbc-b1239af5a683","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"POST","header":[{"key":"Content-Type","value":"text/xml"},{"key":"SOAPAction","value":""}],"body":{"mode":"raw","raw":"<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pub=\"http://xmlns.oracle.com/oxp/service/PublicReportService\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pub:runReport>\r\n         <pub:reportRequest>\r\n          <pub:reportAbsolutePath>{{ReportDirectory}}/TEST_REPORTS/PO_TEST_REPORT_BIND.xdo</pub:reportAbsolutePath>\r\n          <pub:sizeOfDataChunkDownload>-1</pub:sizeOfDataChunkDownload>\r\n          <pub:attributeLocale>en-US</pub:attributeLocale>\r\n          <pub:attributeTemplate>Default</pub:attributeTemplate>\r\n          <pub:attributeFormat>xml</pub:attributeFormat>\r\n\t     <pub:byPassCache>true</pub:byPassCache>\r\n\t     <!-- Ensure the data is normalised with false -->\r\n\t\t<pub:flattenXML>false</pub:flattenXML>\r\n          <!-- Parameter Binds -->\r\n          <pub:parameterNameValues>\r\n             <!-- PO_NUM Search Parameter -->\r\n             <pub:item>\r\n                <pub:name>PO_NUM_SEARCH</pub:name>\r\n                <pub:multiValuesAllowed>false</pub:multiValuesAllowed>\r\n                <pub:values>\r\n                  <pub:item>10%</pub:item>\r\n             \t </pub:values>\r\n             </pub:item>\r\n            </pub:parameterNameValues>\r\n        </pub:reportRequest>\r\n\t    <!-- Username and password -->\r\n        <pub:userID>{{Username}}</pub:userID>\r\n        <pub:password>{{Password}}</pub:password>\r\n      </pub:runReport>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"},"url":{"raw":"{{ServerName}}/xmlpserver/services/PublicReportService","host":["{{ServerName}}"],"path":["xmlpserver","services","PublicReportService"]},"description":"A standard LOV report for filtering by search criteria. This requires the data model to use the LIKE operator to support wild cards."},"response":[],"uid":"2333627-1bc22768-b1d6-4fd2-abbc-b1239af5a683"},{"name":"Multiple LOV Report","event":[{"listen":"test","script":{"id":"9a300b1a-111a-4071-96be-a1819f48bba5","exec":["/* Report specific tests */","pm.test(\"should return GL_ACCESS_SETS data model\", function() {","    var decodedJson = globalFunctions.decodeOBIEEcontent2json(pm);","    pm.expect(decodedJson.DATA_DS.GL_ACCESS_SETS).to.not.be.null;","});","pm.test(\"should return PO_HEADERS data model\", function() {","    var decodedJson = globalFunctions.decodeOBIEEcontent2json(pm);","    pm.expect(decodedJson.DATA_DS.PO_HEADERS).to.not.be.null;","});"],"type":"text/javascript"}}],"id":"17d7f1ab-4e5a-4f2f-aa48-95bd5cd29063","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"POST","header":[{"key":"Content-Type","value":"text/xml"},{"key":"SOAPAction","value":""}],"body":{"mode":"raw","raw":"<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pub=\"http://xmlns.oracle.com/oxp/service/PublicReportService\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pub:runReport>\r\n         <pub:reportRequest>\r\n          <pub:reportAbsolutePath>{{ReportDirectory}}/TEST_REPORTS/PO_TEST_MULTI_LOV.xdo</pub:reportAbsolutePath>\r\n          <pub:sizeOfDataChunkDownload>-1</pub:sizeOfDataChunkDownload>\r\n          <pub:attributeLocale>en-US</pub:attributeLocale>\r\n          <pub:attributeTemplate>Default</pub:attributeTemplate>\r\n          <pub:attributeFormat>xml</pub:attributeFormat>\r\n\t      <pub:byPassCache>true</pub:byPassCache>\r\n\t      <!-- Ensure the data is normalised with false -->\r\n\t\t  <pub:flattenXML>false</pub:flattenXML>\r\n        </pub:reportRequest>\r\n\t    <!-- Username and password -->\r\n        <pub:userID>{{Username}}</pub:userID>\r\n        <pub:password>{{Password}}</pub:password>\r\n      </pub:runReport>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"},"url":{"raw":"{{ServerName}}/xmlpserver/services/PublicReportService","host":["{{ServerName}}"],"path":["xmlpserver","services","PublicReportService"]},"description":"A report containing multiple LOV statements. The LOVs do not have any dependencies and have no relation to each other."},"response":[],"uid":"2333627-17d7f1ab-4e5a-4f2f-aa48-95bd5cd29063"},{"name":"Multilevel Filter Report","event":[{"listen":"test","script":{"id":"f4ddc327-23eb-41f1-8560-de3deb94014f","exec":["/* Report specific tests */","pm.test(\"should return a nested XML structure\", function() {","    var decodedJson = globalFunctions.decodeOBIEEcontent2json(pm);","    // Now determine that we have a PO header and line.","    pm.expect(decodedJson.DATA_DS.PO_HEADERS.PO_LINES).to.not.be.null;","});"],"type":"text/javascript"}}],"id":"fbbefb12-1a33-416b-ae1a-291d68c052bd","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"text/xml","type":"text"},{"key":"SOAPAction","value":"","type":"text"}],"body":{"mode":"raw","raw":"<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pub=\"http://xmlns.oracle.com/oxp/service/PublicReportService\">\n    <soapenv:Header/>\n    <soapenv:Body>\n        <pub:runReport>\n            <pub:reportRequest>\n                <pub:reportAbsolutePath>{{ReportDirectory}}/TEST_REPORTS/PO_MULTILEVEL_FILTERS_REPORT.xdo</pub:reportAbsolutePath>\n                <pub:sizeOfDataChunkDownload>-1</pub:sizeOfDataChunkDownload>\n                <pub:attributeLocale>en-US</pub:attributeLocale>\n                <pub:attributeTemplate>Default</pub:attributeTemplate>\n                <pub:attributeFormat>xml</pub:attributeFormat>\n                <pub:byPassCache>true</pub:byPassCache>\n                <!-- Ensure the data is normalised with false -->\n                <pub:flattenXML>false</pub:flattenXML>\n                <pub:parameterNameValues>\n                    <!-- SEGMENT1 Parameter -->\n                    <pub:item>\n                        <pub:name>PO_NUMBER</pub:name>\n                        <pub:multiValuesAllowed>false</pub:multiValuesAllowed>\n                        <pub:values>\n                            <!-- Comma separated values -->\n                            <pub:item>1</pub:item>\n                            <pub:item>2</pub:item>\n                            <!--<pub:item>1000017</pub:item>-->\n                        </pub:values>\n                    </pub:item>\n                    <!-- SEGMENT1 Parameter -->\n                    <!-- CURRENCY_CODE Parameter -->\n                    <pub:item>\n                        <pub:name>CURRENCY_CODE</pub:name>\n                        <pub:multiValuesAllowed>true</pub:multiValuesAllowed>\n                        <pub:values>\n                            <pub:item>USD</pub:item>\n                        </pub:values>\n                    </pub:item>\n                    <!-- CURRENCY_CODE Parameter -->\n                    <!-- LINE_NUM Parameter -->\n                    <pub:item>\n                        <pub:name>LINE_NUM</pub:name>\n                        <pub:multiValuesAllowed>true</pub:multiValuesAllowed>\n                        <pub:values>\n                            <pub:item>1</pub:item>\n                            <pub:item>2</pub:item>\n                        </pub:values>\n                    </pub:item>\n                    <!-- LINE_NUM Parameter -->\n                </pub:parameterNameValues>\n            </pub:reportRequest>\n            <!-- Username and password -->\n            <pub:userID>{{Username}}</pub:userID>\n            <pub:password>{{Password}}</pub:password>\n        </pub:runReport>\n    </soapenv:Body>\n</soapenv:Envelope>"},"url":{"raw":"{{ServerName}}/xmlpserver/services/PublicReportService","host":["{{ServerName}}"],"path":["xmlpserver","services","PublicReportService"]},"description":"A report containing PO Headers and Lines. The report supports filtering off the Header and Line."},"response":[],"uid":"2333627-fbbefb12-1a33-416b-ae1a-291d68c052bd"},{"name":"Has Report Directory","id":"06ac8881-23a0-4034-b4f8-91725d3b3fe7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"text/xml","type":"text"},{"key":"SOAPAction","value":"","type":"text"}],"body":{"mode":"raw","raw":"<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pub=\"http://xmlns.oracle.com/oxp/service/PublicReportService\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pub:getFolderContents>\r\n        <pub:folderAbsolutePath>{{ReportDirectory}}/TEST_REPORTS</pub:folderAbsolutePath>\r\n\t    <!-- Username and password -->\r\n        <pub:userID>{{Username}}</pub:userID>\r\n        <pub:password>{{Password}}</pub:password>\r\n      </pub:getFolderContents>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"},"url":{"raw":"{{ServerName}}/xmlpserver/services/PublicReportService","host":["{{ServerName}}"],"path":["xmlpserver","services","PublicReportService"]},"description":"Determines whether a report absolute directory path exists.\n\n# Documentation:\nhttps://docs.oracle.com/cd/E12844_01/doc/bip.1013/e12188/T421739T524310.htm"},"response":[],"uid":"2333627-06ac8881-23a0-4034-b4f8-91725d3b3fe7"}],"event":[{"listen":"prerequest","script":{"id":"6cdc1736-553f-4b2c-ab85-c8978bc09715","type":"text/javascript","exec":["","/**"," * Global functions collection for use within requests"," **/"," globalFunctions = {","     ","    /**","    * getOBIEEReportBytes","    * @description Retrieves the OBIEE report bytes from the XML response","    * @param pm - postman variable containing response","    * @return Report bytes","    **/","    getOBIEEReportBytes: function(pm) {","        // Convert to JSON so we can retrieve the report bytes","        var jsonObject = xml2Json(pm.response.text());","        // Return the report bytes","        return jsonObject['soapenv:Envelope']['soapenv:Body'].runReportResponse.runReportReturn.reportBytes;","    },","    ","    /**","    * decodeOBIEEcontent2json","    * @description Decodes OBIEE Base64 content as JSON","    * @param pm - postman variable containing response","    * @return Base64 decoded content as JSON","    **/","    decodeOBIEEcontent2json: function(pm) {","        // Return the report bytes","        var base64Content = globalFunctions.getOBIEEReportBytes(pm);","        // Parse the base6 bytes","        var intermediate = CryptoJS.enc.Base64.parse(base64Content);","        // Return the UTF-8 decoded string","        var utf8xml = CryptoJS.enc.Utf8.stringify(intermediate);","        // Log the Base64","        console.log(\"Base64 report: \", utf8xml);","        // Convert the XML to JSON","        var jsonReport = xml2Json(utf8xml);","        // Log the JSON","        console.log(\"JSON report: \", jsonReport);","        // Return the UTF-8 string as JSON","        return jsonReport;","    }"," }"]}},{"listen":"test","script":{"id":"380b801c-31e7-49e3-a07f-ee647e4ca9fc","type":"text/javascript","exec":["/* Generic OBIEE tests */","pm.test(\"should return 200 on successful response\", function () { ","    pm.response.to.have.status(200);","});","","pm.test(\"should return the report as a base64 encoded string\", function() {","    var reportBytes = globalFunctions.getOBIEEReportBytes(pm);","    pm.expect(reportBytes).to.not.be.null;","});","","pm.test(\"should have a content type of text/txml\", function() {","    var jsonObject = xml2Json(pm.response.text());","    pm.expect(jsonObject['soapenv:Envelope']['soapenv:Body'].runReportResponse.runReportReturn.reportContentType).to.equal(\"text/xml\");","});"]}}]}}