{"collection":{"info":{"_postman_id":"eadf6cd7-d581-49e3-a65a-2f9bb664c273","name":"Oracle Cloud Users","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json","updatedAt":"2025-07-28T02:41:51.000Z","createdAt":"2021-08-16T22:48:05.000Z","lastUpdatedBy":"5845306","uid":"11620793-eadf6cd7-d581-49e3-a65a-2f9bb664c273"},"item":[{"name":"Create User","id":"cf84d680-6bd8-4b93-a70f-82e879e34f86","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"basic","basic":[{"key":"username","value":"{{Username}}","type":"string"},{"key":"password","value":"{{Password}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","value":"application/vnd.oracle.adf.resourceitem+json","type":"text","disabled":true},{"key":"Content-Type","value":"application/json","type":"text"},{"key":"Rest-Framework-Version","value":"7","type":"text"}],"body":{"mode":"raw","raw":"{\r\n \"schemas\":[\r\n  \"urn:scim:schemas:core:2.0:User\"\r\n ],\r\n \"name\":{\r\n  \"familyName\":\"M4a\",\r\n  \"givenName\":\"Akash1\"\r\n },\r\n \"active\":true,\r\n \"userName\":\"AKASH_TEST1\",\r\n \"emails\":[\r\n  {\r\n   \"primary\":true,\r\n   \"value\":\"akash1@m4a.com\",\r\n   \"type\":\"W\"\r\n  }\r\n ],\r\n \"displayName\":\"Akash1\",\r\n \"externalId\":\"externalId1:\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{ServerName}}/hcmRestApi/scim/Users","host":["{{ServerName}}"],"path":["hcmRestApi","scim","Users"]},"description":"https://docs.oracle.com/en/cloud/saas/project-management/21a/fapap/op-unprocessedprojectcosts-post.html\r\n\r\n# Changes to get the service to work\r\n- ExpenditureBatch and OriginalTransactionReference must be unique\r\n\r\n"},"response":[],"uid":"11620793-cf84d680-6bd8-4b93-a70f-82e879e34f86"},{"name":"Change Password(ETAQ)","event":[{"listen":"test","script":{"id":"393c4cf8-5cd3-41a8-8418-a445e702cc91","exec":["\r","const etaq_url = \"https://fa-etaq-dev21-saasfademo1.ds-fa.oraclepdemos.com/hcmRestApi/scim/Users/\";\r","\r","// Can retrieve user id using the service \"Get Users\" with a filter with your user name\r","const users = ['Akash.Kubavat','Allan.Neagle','Anila.Ahmed','Assraf.Ali','Brad.Sayer','Brent.Moran','Casey.Peng','Chooi.Chung','Connie.Bryers','Connor.Burgess','David.Ruttenberg','Karen.Walker','Kylie.Ho','Lance.Mclachlan','Lily.Liu','Noel.Sanderson','Ryan.Heyblom','Sian.Forster','Steve.West','Stuart.Little','Sue.Carey','Tony.Nicholls','Wai.Thant-Cyn','Warren.Lieberman','Sarah.Sinclair','David.Wright','Nigel.Grange','Lily.Mazieres','Rachana.Haste','Andrew.Gooch','Gavin.Whyte','Nancy.Zhang','Bruce.Doig','Casey.Brown','Paul.Hassall','Nothing.Nothing', 'FANTA.JABARA', 'SCM_IMPL', 'Yogeswari.Unnikrishnan',\r","    // Brad sometimes wants his own password\r","    'Brad.Sayer',\r","    // For Lance\r","    'customers.us1buset',\r","    'customers.uk1buset',\r","    'customers.super1',\r","    'customers.super2',\r","    'SupplierPay1',\r","    'SupplierPay2',\r","    'SupplierPay3',\r","    'SupplierPayImpl',\r","    //'On Account Credit Memo Int.Min Privs',   // user does not exist. No idea why it was added\r","    // Brads\r","    'More4apps.SupplierAgent',\r","    'More4apps.Americas',\r","    'More4apps.AsiaPacific',\r","    'More4apps.Europe',\r","    'AR.User',\r","    'AP.User',\r","    // AR Receipts user\r","    'M4A AR Receipts User1',\r","    // Tonys User\r","    'liz.morgan',\r","    //Connie User\r","    'kylie.hutchins'\r","    ];\r","//['LILY.LIU', 'DA6C00CE143C4CACE053D95DEC0ADEA4']   //Lily's password gets changed first by the main request. Then below script will be run automatically to change the others passowrd. The users list can be exapnd to change the passowrd for more users.\r","\r","// Based64 encoded string assuming that passwords are Innovation1 when running this script: \r","//lily.liu:Innovation1 = bGlseS5saXU6SW5ub3ZhdGlvbjE=\r","//Paul.Hassall:Innovation1 = UGF1bC5IYXNzYWxsOklubm92YXRpb24x\r","//Connor.Burgess:Innovation1 = Q29ubm9yLkJ1cmdlc3M6SW5ub3ZhdGlvbjE=\r","//Akash.Kubavat:Innovation1 = QWthc2guS3ViYXZhdDpJbm5vdmF0aW9uMQ==\r","const basicAuth = 'Basic UGF1bC5IYXNzYWxsOklubm92YXRpb24x';  \r","\r","function changePassword(userId) {\r","    console.log('Get userid for: [' + userId + ']');\r","    pm.sendRequest({\r","    url: etaq_url + userId,\r","    method: 'PATCH',\r","    header: {\r","        'Content-Type': 'application/json',\r","        'Rest-Framework-Version': '8',\r","        'Authorization': basicAuth,\r","    },\r","    body: {\r","        mode: 'raw',\r","        raw: JSON.stringify(\r","            {\r","                \"schemas\":[\r","                    \"urn:scim:schemas:core:2.0:User\"\r","                ],\r","                    \"password\":\"Innovation1\"\r","            }\r","        )\r","    }\r","    }, function (err, res) {\r","        console.log(res);\r","        pm.test(\"Status code of changing password is 200 - pm.expect\", function () {\r","            pm.expect(pm.response.code).to.equal(200); \r","        });\r","    });\r","}\r","function getUserId(userName){\r","    pm.sendRequest({\r","        url: etaq_url + '?filter=userName eq \"' + userName + '\"',\r","        method: 'GET',\r","        header: {\r","            'Content-Type': 'application/json',\r","            'Rest-Framework-Version': '8',\r","            'Authorization': basicAuth,\r","        }}, function (err, res) {\r","            console.log(res);\r","            pm.test(\"Status code of getting user id is 200 - pm.expect\", function () {\r","                pm.expect(pm.response.code).to.equal(200); \r","        });\r","        if(pm.response.code === 200){\r","            var jsonData = res.json();\r","            var userId = jsonData.Resources[0].id;\r","            changePassword(userId);\r","        }\r","    });\r","}\r","\r","if(pm.response.code === 200){\r","    for ( user of users.values()) {\r","        getUserId(user)\r","    }\r","}"],"type":"text/javascript","packages":{}}}],"id":"33a9438d-3cf1-42cb-b8a2-c55f487ef5e6","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"basic","basic":[{"key":"password","value":"m%L5*3hb","type":"string"},{"key":"username","value":"paul.hassall","type":"string"}]},"method":"PATCH","header":[],"body":{"mode":"raw","raw":"{\r\n    \"schemas\":[\r\n         \"urn:scim:schemas:core:2.0:User\"\r\n    ],\r\n    \"password\":\"Innovation1\"\r\n}\r\n","options":{"raw":{"language":"json"}}},"url":{"raw":"https://fa-etaq-dev21-saasfademo1.ds-fa.oraclepdemos.com/hcmRestApi/scim/Users/:id","protocol":"https","host":["fa-etaq-dev21-saasfademo1","ds-fa","oraclepdemos","com"],"path":["hcmRestApi","scim","Users",":id"],"query":[{"key":"Connor id:","value":"DA6C00CE14384CACE053D95DEC0ADEA4","disabled":true},{"key":"Paul id:","value":"DA6C00CE143E4CACE053D95DEC0ADEA4","disabled":true},{"key":"Lily id:","value":"DA6C00CE143C4CACE053D95DEC0ADEA4","disabled":true},{"key":"Nothing.nothing id:","value":"EC8A1D01870C0B6BE053D95DEC0AA70E, EC8A1D01870B0B6BE053D95DEC0AA70E","disabled":true},{"key":"Akash id:","value":"DA6C011C60304D18E053D95DEC0AD27A","disabled":true}],"variable":[{"key":"id","value":"DA6C00CE143E4CACE053D95DEC0ADEA4"}]}},"response":[],"uid":"11620793-33a9438d-3cf1-42cb-b8a2-c55f487ef5e6"},{"name":"Change Email","event":[{"listen":"test","script":{"id":"393c4cf8-5cd3-41a8-8418-a445e702cc91","exec":["\r","const etaq_url = \"https://fa-etaq-dev21-saasfademo1.ds-fa.oraclepdemos.com/hcmRestApi/scim/Users/\";\r","\r","// Can retrieve user id using the service \"Get Users\" with a filter with your user name\r","const users = ['Akash.Kubavat','Allan.Neagle','Anila.Ahmed','Assraf.Ali','Brad.Sayer','Brent.Moran','Casey.Peng','Chooi.Chung','Connie.Bryers','Connor.Burgess','David.Ruttenberg','Karen.Walker','Kylie.Ho','Lance.Mclachlan','Lily.Liu','Noel.Sanderson','Ryan.Heyblom','Sian.Forster','Steve.West','Stuart.Little','Sue.Carey','Tony.Nicholls','Wai.Thant-Cyn','Warren.Lieberman','Sarah.Sinclair','David.Wright','Nigel.Grange','Lily.Mazieres','Rachana.Haste','Andrew.Gooch','Gavin.Whyte','Nancy.Zhang','Bruce.Doig','Casey.Brown','Paul.Hassall','Nothing.Nothing', 'FANTA.JABARA', 'SCM_IMPL', 'Yogeswari.Unnikrishnan',\r","    // Brad sometimes wants his own password\r","    'Brad.Sayer',\r","    // For Lance\r","    'customers.us1buset',\r","    'customers.uk1buset',\r","    'customers.super1',\r","    'customers.super2',\r","    'SupplierPay1',\r","    'SupplierPay2',\r","    'SupplierPay3',\r","    'SupplierPayImpl',\r","    //'On Account Credit Memo Int.Min Privs',   // user does not exist. No idea why it was added\r","    // Brads\r","    'More4apps.SupplierAgent',\r","    'More4apps.Americas',\r","    'More4apps.AsiaPacific',\r","    'More4apps.Europe',\r","    'AR.User',\r","    'AP.User',\r","    // AR Receipts user\r","    'M4A AR Receipts User1',\r","    // Tonys User\r","    'liz.morgan',\r","    //Connie User\r","    'kylie.hutchins'\r","    ];\r","//['LILY.LIU', 'DA6C00CE143C4CACE053D95DEC0ADEA4']   //Lily's password gets changed first by the main request. Then below script will be run automatically to change the others passowrd. The users list can be exapnd to change the passowrd for more users.\r","\r","// Based64 encoded string assuming that passwords are Innovation1 when running this script: \r","//lily.liu:Innovation1 = bGlseS5saXU6SW5ub3ZhdGlvbjE=\r","//Paul.Hassall:Innovation1 = UGF1bC5IYXNzYWxsOklubm92YXRpb24x\r","//Connor.Burgess:Innovation1 = Q29ubm9yLkJ1cmdlc3M6SW5ub3ZhdGlvbjE=\r","//Akash.Kubavat:Innovation1 = QWthc2guS3ViYXZhdDpJbm5vdmF0aW9uMQ==\r","const basicAuth = 'Basic UGF1bC5IYXNzYWxsOklubm92YXRpb24x';  \r","\r","function changePassword(userId) {\r","    console.log('Get userid for: [' + userId + ']');\r","    pm.sendRequest({\r","    url: etaq_url + userId,\r","    method: 'PATCH',\r","    header: {\r","        'Content-Type': 'application/json',\r","        'Rest-Framework-Version': '8',\r","        'Authorization': basicAuth,\r","    },\r","    body: {\r","        mode: 'raw',\r","        raw: JSON.stringify(\r","            {\r","                \"schemas\":[\r","                    \"urn:scim:schemas:core:2.0:User\"\r","                ],\r","                    \"password\":\"Innovation1\"\r","            }\r","        )\r","    }\r","    }, function (err, res) {\r","        console.log(res);\r","        pm.test(\"Status code of changing password is 200 - pm.expect\", function () {\r","            pm.expect(pm.response.code).to.equal(200); \r","        });\r","    });\r","}\r","function getUserId(userName){\r","    pm.sendRequest({\r","        url: etaq_url + '?filter=userName eq \"' + userName + '\"',\r","        method: 'GET',\r","        header: {\r","            'Content-Type': 'application/json',\r","            'Rest-Framework-Version': '8',\r","            'Authorization': basicAuth,\r","        }}, function (err, res) {\r","            console.log(res);\r","            pm.test(\"Status code of getting user id is 200 - pm.expect\", function () {\r","                pm.expect(pm.response.code).to.equal(200); \r","        });\r","        if(pm.response.code === 200){\r","            var jsonData = res.json();\r","            var userId = jsonData.Resources[0].id;\r","            changePassword(userId);\r","        }\r","    });\r","}\r","\r","if(pm.response.code === 200){\r","    for ( user of users.values()) {\r","        getUserId(user)\r","    }\r","}"],"type":"text/javascript","packages":{}}}],"id":"f4a0a2c3-c13a-451b-b690-9a1bc7835ebd","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"basic","basic":[{"key":"password","value":"m%L5*3hb","type":"string"},{"key":"username","value":"paul.hassall","type":"string"}]},"method":"PATCH","header":[],"body":{"mode":"raw","raw":"{\r\n    \"schemas\":[\r\n         \"urn:scim:schemas:core:2.0:User\"\r\n    ],\r\n    \"password\":\"Innovation1\"\r\n}\r\n","options":{"raw":{"language":"json"}}},"url":{"raw":"https://fa-etaq-dev21-saasfademo1.ds-fa.oraclepdemos.com/hcmRestApi/scim/Users/:id","protocol":"https","host":["fa-etaq-dev21-saasfademo1","ds-fa","oraclepdemos","com"],"path":["hcmRestApi","scim","Users",":id"],"query":[{"key":"Connor id:","value":"DA6C00CE14384CACE053D95DEC0ADEA4","disabled":true},{"key":"Paul id:","value":"DA6C00CE143E4CACE053D95DEC0ADEA4","disabled":true},{"key":"Lily id:","value":"DA6C00CE143C4CACE053D95DEC0ADEA4","disabled":true},{"key":"Nothing.nothing id:","value":"EC8A1D01870C0B6BE053D95DEC0AA70E, EC8A1D01870B0B6BE053D95DEC0AA70E","disabled":true},{"key":"Akash id:","value":"DA6C011C60304D18E053D95DEC0AD27A","disabled":true}],"variable":[{"id":"c56b56d5-18d3-4cfa-8a85-bd256e62f5a7","key":"id","value":"DA6C00CE143E4CACE053D95DEC0ADEA4"}]}},"response":[],"uid":"11620793-f4a0a2c3-c13a-451b-b690-9a1bc7835ebd"},{"name":"Change Password(ESDF)","event":[{"listen":"test","script":{"id":"393c4cf8-5cd3-41a8-8418-a445e702cc91","exec":["\r","const etaq_url = \"https://fa-esfd-dev12-saasfademo1.ds-fa.oraclepdemos.com/hcmRestApi/scim/Users/\";\r","\r","// Can retrieve user id using the service \"Get Users\" with a filter with your user name\r","const users = ['David.Wright','David.Ruttenberg','Lily.Mazieres','Rachana.Haste','Todd.Herbay','Warren.Lieberman','Nigel.Grange','Bruce.Doig','Sian.Lloyd'\r","    ];\r","//['LILY.LIU', 'DA6C00CE143C4CACE053D95DEC0ADEA4']   //Lily's password gets changed first by the main request. Then below script will be run automatically to change the others passowrd. The users list can be exapnd to change the passowrd for more users.\r","\r","// Based64 encoded string assuming that passwords are Innovation1 when running this script: \r","//lily.liu:Innovation1 = bGlseS5saXU6SW5ub3ZhdGlvbjE=\r","//Paul.Hassall:Innovation1 = UGF1bC5IYXNzYWxsOklubm92YXRpb24x\r","//Connor.Burgess:Innovation1 = Q29ubm9yLkJ1cmdlc3M6SW5ub3ZhdGlvbjE=\r","//Akash.Kubavat:Innovation1 = QWthc2guS3ViYXZhdDpJbm5vdmF0aW9uMQ==\r","const basicAuth = 'Basic YWRtaW4uYWRtaW46SW5ub3ZhdGlvbjI=';  \r","\r","function changePassword(userId) {\r","    console.log('Get userid for: [' + userId + ']');\r","    pm.sendRequest({\r","    url: etaq_url + userId,\r","    method: 'PATCH',\r","    header: {\r","        'Content-Type': 'application/json',\r","        'Rest-Framework-Version': '8',\r","        'Authorization': basicAuth,\r","    },\r","    body: {\r","        mode: 'raw',\r","        raw: JSON.stringify(\r","            {\r","                \"schemas\":[\r","                    \"urn:scim:schemas:core:2.0:User\"\r","                ],\r","                    \"password\":\"Innovation2\"\r","            }\r","        )\r","    }\r","    }, function (err, res) {\r","        console.log(res);\r","        pm.test(\"Status code of changing password is 200 - pm.expect\", function () {\r","            pm.expect(pm.response.code).to.equal(200); \r","        });\r","    });\r","}\r","function getUserId(userName){\r","    pm.sendRequest({\r","        url: etaq_url + '?filter=userName eq \"' + userName + '\"',\r","        method: 'GET',\r","        header: {\r","            'Content-Type': 'application/json',\r","            'Rest-Framework-Version': '8',\r","            'Authorization': basicAuth,\r","        }}, function (err, res) {\r","            console.log(res);\r","            pm.test(\"Status code of getting user id is 200 - pm.expect\", function () {\r","                pm.expect(pm.response.code).to.equal(200); \r","        });\r","        if(pm.response.code === 200){\r","            var jsonData = res.json();\r","            var userId = jsonData.Resources[0].id;\r","            changePassword(userId);\r","        }\r","    });\r","}\r","\r","if(pm.response.code === 200){\r","    for ( user of users.values()) {\r","        getUserId(user)\r","    }\r","}"],"type":"text/javascript","packages":{}}}],"id":"eeac35ad-3935-48d1-82a1-2effe6b54c4d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"basic","basic":[{"key":"password","value":"Innovation2","type":"string"},{"key":"username","value":"admin.admin","type":"string"}]},"method":"PATCH","header":[],"body":{"mode":"raw","raw":"{\r\n    \"schemas\":[\r\n         \"urn:scim:schemas:core:2.0:User\"\r\n    ],\r\n    \"password\":\"Innovation2\"\r\n}\r\n","options":{"raw":{"language":"json"}}},"url":{"raw":"https://fa-esfd-dev12-saasfademo1.ds-fa.oraclepdemos.com/hcmRestApi/scim/Users/:id","protocol":"https","host":["fa-esfd-dev12-saasfademo1","ds-fa","oraclepdemos","com"],"path":["hcmRestApi","scim","Users",":id"],"query":[{"key":"Admin id:","value":"2D0EE506A3BF1874E0630C9617ACC925","disabled":true}],"variable":[{"key":"id","value":"2D0EE506A3BF1874E0630C9617ACC925"}]}},"response":[],"uid":"11620793-eeac35ad-3935-48d1-82a1-2effe6b54c4d"},{"name":"Create User W/O FamilyNGiven Name","id":"bbe71140-8e40-4950-9d07-e56d90987f07","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"basic","basic":[{"key":"username","value":"{{Username}}","type":"string"},{"key":"password","value":"{{Password}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","value":"application/vnd.oracle.adf.resourceitem+json","type":"text","disabled":true},{"key":"Content-Type","value":"application/json","type":"text"},{"key":"Rest-Framework-Version","value":"7","type":"text"}],"body":{"mode":"raw","raw":"{\r\n \"schemas\":[\r\n  \"urn:scim:schemas:core:2.0:User\"\r\n ],\r\n \r\n \"active\":true,\r\n \"userName\":\"AKASH_TEST1\",\r\n \"emails\":[\r\n  {\r\n   \"primary\":true,\r\n   \"value\":\"akash1@m4a.com\",\r\n   \"type\":\"W\"\r\n  }\r\n ],\r\n \"displayName\":\"Akash1\",\r\n \"externalId\":\"externalId1:\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{ServerName}}/hcmRestApi/scim/Users","host":["{{ServerName}}"],"path":["hcmRestApi","scim","Users"]},"description":"https://docs.oracle.com/en/cloud/saas/project-management/21a/fapap/op-unprocessedprojectcosts-post.html\r\n\r\n# Changes to get the service to work\r\n- ExpenditureBatch and OriginalTransactionReference must be unique\r\n\r\n"},"response":[],"uid":"11620793-bbe71140-8e40-4950-9d07-e56d90987f07"},{"name":"Create User W/O FamilyNGiven Name, DisplayName","id":"63eb8b4f-c4f6-479f-82fe-c67c8ab273d9","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"basic","basic":[{"key":"username","value":"{{Username}}","type":"string"},{"key":"password","value":"{{Password}}","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","value":"application/vnd.oracle.adf.resourceitem+json","type":"text","disabled":true},{"key":"Content-Type","value":"application/json","type":"text"},{"key":"Rest-Framework-Version","value":"7","type":"text"}],"body":{"mode":"raw","raw":"{\r\n \"schemas\":[\r\n  \"urn:scim:schemas:core:2.0:User\"\r\n ],\r\n \r\n \"active\":true,\r\n \"userName\":\"AKASH_TEST3\",\r\n \"emails\":[\r\n  {\r\n   \"primary\":true,\r\n   \"value\":\"akash3@m4a.com\",\r\n   \"type\":\"W\"\r\n  }\r\n ],\r\n \"externalId\":\"externalId3:\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{ServerName}}/hcmRestApi/scim/Users","host":["{{ServerName}}"],"path":["hcmRestApi","scim","Users"]},"description":"https://docs.oracle.com/en/cloud/saas/project-management/21a/fapap/op-unprocessedprojectcosts-post.html\r\n\r\n# Changes to get the service to work\r\n- ExpenditureBatch and OriginalTransactionReference must be unique\r\n\r\n"},"response":[],"uid":"11620793-63eb8b4f-c4f6-479f-82fe-c67c8ab273d9"},{"name":"Get Users","id":"c0c45c80-b919-4c02-941c-6980d2e47185","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Content-Type","value":"application/json","type":"text"},{"key":"Rest-Framework-Version","value":"8","type":"text"}],"url":{"raw":"{{ServerName}}/hcmRestApi/scim/Users?filter=userName eq \"LILY.LIU\"","host":["{{ServerName}}"],"path":["hcmRestApi","scim","Users"],"query":[{"key":"count","value":"1","disabled":true},{"key":"filter","value":"userName eq \"LILY.LIU\""}]}},"response":[],"uid":"11620793-c0c45c80-b919-4c02-941c-6980d2e47185"}],"auth":{"type":"basic","basic":[{"key":"username","value":"{{Username}}","type":"string"},{"key":"password","value":"{{Password}}","type":"string"}]}}}